\" hi
.TH BRAN 1 2019-05-05 bran "Bran Manual"
.SH NAME
bran \- compile brainf**k to C.
.SH SYNOPSIS
.BR bran
[file]
.SH DESCRIPTION
.B bran
outputs assembly code based on brainf**k input. This code is valid ANSI C.

.B bran
should be fully compatible with most brainf**k interpreters. It uses 8-bit
cells, and has 1024 cells available. It is written in C99.

To use
.BR bran ,
pipe input into standard input or via the command line. Pipe the output of
.B bran
into
.BR cc (1)
to build an executable.

.SH SYNTAX
Brainf**k is a very simple language. Its memory system is like a tape, and the
current location on the tape can be moved. The core language has six commands:

< and > (ASCII codepoint 60 and 62)
.RS
These move the location on the tape left (<) or right (>) one position.
.RE

+ and - (ASCII codepoint 43 and 45)
.RS
These increment (+) or decrement (-) the value of the current position on the
tape by one.
.RE

[ (ASCII codepoint 91)
.RS
If the value of the current position is zero, jumps to the corresponding closing
square bracket (], codepoint 93).
.RE

] (ASCII codepoint 93)
.RS
If the value of the current position is
.I not
zero, jumps to the corresponding opening bracket ([, codepoint 91).
.RE

, (ASCII codepoint 44)
.RS
Reads a single character from standard input into the current tape position.
.RE

\[char46] (ASCII codepoint 46)
.RS
Outputs the value of the current position of the tape onto stdout.
.RE

Several more have been added, to support more development with it.

$ (ASCII codepoint 36)
.RS
Switch into Special Mode for the next letter.
.RE

% (ASCII codepoint 37)
.RS
Print the current value of the Z string register.
.RE

* (ASCII codepoint 42)
.RS
Create a new marker. This marker can be jumped to using the '^' command. Each
new marker overrides the previous one: all jumps before will jump to the old
one, and all new ones ot the new marker.
.RE

^ (ASCII codepoint 94)
.RS
Jumps to the last-made marker.
.RE

\(cq (ASCII codepoint 39, apostrophe)
.RS
Pushes the next ASCII character in the source into the current cell.
.RE

.B Special Mode
.RS

s-z (ASCII codepoints 115-122)
.RS
Store a string in the string register. Gets the string by looking at the current
value of the current position, going back that many, and storing that; it goes
backward and takes the length from the current position.
.RE

S-Z (ASCII codepoints 83-90)
.RS
Takes a string from the string register. Stores it (string length) before the
current position.
.RE

a-g (ASCII codepoints 97-103)
.RS
Puts the current value into the register identified by a, b, etc.
.RE

A-G (ASCII codepoints 65-71)
.RS
Puts the register value into the current value.
.RE

.RE
.SH COPYRIGHT
Bran is copyright 2019 thatlittlegit, and is licensed under the Unlicense. For
more information on the Unlicense, see
.BR "https://unlicense.org" .

.SH BUGS
.RS
.IP \(bu
If EOF is encountered when reading to the tape, the result of the
.BR read (2)
system call is given exactly to the program. This should be at least defined.

.IP \(bu
Only 1024 cells are availible, and there are no real limits to runtime
allocation here beyond that.
